{
  "parser": "@typescript-eslint/parser",
  "root": true,
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime"
  ],
  "plugins": ["testing-library", "react", "react-hooks"],
  "overrides": [
    // Only uses Testing Library lint rules in test files
    {
      "files": [
        "**/__tests__/**/*.[jt]s?(x)",
        "**/?(*.)+(spec|test).[jt]s?(x)"
      ],
      "extends": ["plugin:testing-library/react"]
    },
    {
      "files": "**/*.+(js|jsx)",
      "plugins": ["react", "react-hooks"],
      "extends": [
        "next/core-web-vitals",
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:react/jsx-runtime"
      ]
    }
  ],
  "rules": {
    "semi": "off",
    "no-console": ["error", { "allow": ["info", "warn", "error", "debug"] }],
    "no-unused-expressions": "warn",
    "no-await-in-loop": "warn",
    "no-template-curly-in-string": "warn",
    "array-callback-return": "warn",
    "block-scoped-var": "error",
    "no-param-reassign": "error",
    "no-restricted-globals": [
      "error",
      "addEventListener",
      "Animation",
      "blur",
      "close",
      "closed",
      "confirm",
      "defaultStatus",
      "defaultstatus",
      "event",
      "external",
      "find",
      "focus",
      "frameElement",
      "frames",
      "history",
      "History",
      "innerHeight",
      "innerWidth",
      "length",
      "location",
      "locationbar",
      "menubar",
      "moveBy",
      "moveTo",
      "name",
      "navigator",
      "onblur",
      "onerror",
      "onfocus",
      "onload",
      "onresize",
      "onunload",
      "open",
      "opener",
      "opera",
      "origin",
      "outerHeight",
      "outerWidth",
      "pageXOffset",
      "pageYOffset",
      "parent",
      "print",
      "removeEventListener",
      "resizeBy",
      "resizeTo",
      "screen",
      "screenLeft",
      "screenTop",
      "screenX",
      "screenY",
      "scroll",
      "scrollbars",
      "scrollBy",
      "scrollTo",
      "scrollX",
      "scrollY",
      "status",
      "statusbar",
      "stop",
      "Text",
      "toolbar",
      "top"
    ],
    "no-restricted-imports": [
      "error",
      {
        "patterns": ["**/*.spec", "**/*.spec.*"]
      }
    ],
    // React specific errors
    "react/jsx-no-comment-textnodes": "error",
    "react/jsx-key": ["error", { "checkFragmentShorthand": true }],
    "react/no-did-mount-set-state": "error",
    "react/no-did-update-set-state": "error",
    "react/no-access-state-in-setstate": "error",
    "react/jsx-no-bind": [
      "error",
      {
        "ignoreDOMComponents": true,
        "ignoreRefs": false,
        "allowArrowFunctions": false,
        "allowFunctions": false,
        "allowBind": false
      }
    ],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    // typescript-eslint rules
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "args": "none",
        "varsIgnorePattern": "_exhaustiveCheck",
        "ignoreRestSiblings": true
      }
    ],
    // inherited rules we are turning off here
    "no-undef": "error",
    "no-inner-declarations": "off",
    "no-dupe-class-members": "off",
    "no-case-declarations": "off",
    "no-prototype-builtins": "warn",
    "no-useless-escape": "warn",
    "no-var": "error",
    "prefer-const": "warn",
    "react/prop-types": "off",
    "react/display-name": "off",
    "react/no-deprecated": "off",
    "react/no-direct-mutation-state": "off",
    "react/no-find-dom-node": "off",
    "react/no-unescaped-entities": "off",
    "react/no-string-refs": "off",
    "react/no-typos": "off",
    "react/require-render-return": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/array-type": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-object-literal-type-assertion": "off",
    "@typescript-eslint/no-var-requires": "warn",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error"
  }
}
